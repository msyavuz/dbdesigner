/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteRouteImport } from './routes/_protected/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignupIndexRouteImport } from './routes/auth/signup/index'
import { Route as AuthLoginIndexRouteImport } from './routes/auth/login/index'
import { Route as AuthForgotPasswordIndexRouteImport } from './routes/auth/forgot-password/index'
import { Route as ProtectedProjectsIndexRouteImport } from './routes/_protected/projects/index'
import { Route as ProtectedProjectsProjectIdRouteRouteImport } from './routes/_protected/projects/$projectId/route'
import { Route as ProtectedProjectsProjectIdIndexRouteImport } from './routes/_protected/projects/$projectId/index'
import { Route as ProtectedProjectsProjectIdWorkbenchIndexRouteImport } from './routes/_protected/projects/$projectId/workbench/index'
import { Route as ProtectedProjectsProjectIdAiIndexRouteImport } from './routes/_protected/projects/$projectId/ai/index'

const ProtectedRouteRoute = ProtectedRouteRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupIndexRoute = AuthSignupIndexRouteImport.update({
  id: '/auth/signup/',
  path: '/auth/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordIndexRoute = AuthForgotPasswordIndexRouteImport.update({
  id: '/auth/forgot-password/',
  path: '/auth/forgot-password/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedProjectsIndexRoute = ProtectedProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const ProtectedProjectsProjectIdRouteRoute =
  ProtectedProjectsProjectIdRouteRouteImport.update({
    id: '/projects/$projectId',
    path: '/projects/$projectId',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)
const ProtectedProjectsProjectIdIndexRoute =
  ProtectedProjectsProjectIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProtectedProjectsProjectIdRouteRoute,
  } as any)
const ProtectedProjectsProjectIdWorkbenchIndexRoute =
  ProtectedProjectsProjectIdWorkbenchIndexRouteImport.update({
    id: '/workbench/',
    path: '/workbench/',
    getParentRoute: () => ProtectedProjectsProjectIdRouteRoute,
  } as any)
const ProtectedProjectsProjectIdAiIndexRoute =
  ProtectedProjectsProjectIdAiIndexRouteImport.update({
    id: '/ai/',
    path: '/ai/',
    getParentRoute: () => ProtectedProjectsProjectIdRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/projects/$projectId': typeof ProtectedProjectsProjectIdRouteRouteWithChildren
  '/projects': typeof ProtectedProjectsIndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/signup': typeof AuthSignupIndexRoute
  '/projects/$projectId/': typeof ProtectedProjectsProjectIdIndexRoute
  '/projects/$projectId/ai': typeof ProtectedProjectsProjectIdAiIndexRoute
  '/projects/$projectId/workbench': typeof ProtectedProjectsProjectIdWorkbenchIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/projects': typeof ProtectedProjectsIndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/signup': typeof AuthSignupIndexRoute
  '/projects/$projectId': typeof ProtectedProjectsProjectIdIndexRoute
  '/projects/$projectId/ai': typeof ProtectedProjectsProjectIdAiIndexRoute
  '/projects/$projectId/workbench': typeof ProtectedProjectsProjectIdWorkbenchIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/_protected/projects/$projectId': typeof ProtectedProjectsProjectIdRouteRouteWithChildren
  '/_protected/projects/': typeof ProtectedProjectsIndexRoute
  '/auth/forgot-password/': typeof AuthForgotPasswordIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/signup/': typeof AuthSignupIndexRoute
  '/_protected/projects/$projectId/': typeof ProtectedProjectsProjectIdIndexRoute
  '/_protected/projects/$projectId/ai/': typeof ProtectedProjectsProjectIdAiIndexRoute
  '/_protected/projects/$projectId/workbench/': typeof ProtectedProjectsProjectIdWorkbenchIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/projects/$projectId'
    | '/projects'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/signup'
    | '/projects/$projectId/'
    | '/projects/$projectId/ai'
    | '/projects/$projectId/workbench'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/projects'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/signup'
    | '/projects/$projectId'
    | '/projects/$projectId/ai'
    | '/projects/$projectId/workbench'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/_protected/projects/$projectId'
    | '/_protected/projects/'
    | '/auth/forgot-password/'
    | '/auth/login/'
    | '/auth/signup/'
    | '/_protected/projects/$projectId/'
    | '/_protected/projects/$projectId/ai/'
    | '/_protected/projects/$projectId/workbench/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
  AuthForgotPasswordIndexRoute: typeof AuthForgotPasswordIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthSignupIndexRoute: typeof AuthSignupIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup/': {
      id: '/auth/signup/'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password/': {
      id: '/auth/forgot-password/'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/projects/': {
      id: '/_protected/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProtectedProjectsIndexRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/projects/$projectId': {
      id: '/_protected/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProtectedProjectsProjectIdRouteRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/projects/$projectId/': {
      id: '/_protected/projects/$projectId/'
      path: '/'
      fullPath: '/projects/$projectId/'
      preLoaderRoute: typeof ProtectedProjectsProjectIdIndexRouteImport
      parentRoute: typeof ProtectedProjectsProjectIdRouteRoute
    }
    '/_protected/projects/$projectId/workbench/': {
      id: '/_protected/projects/$projectId/workbench/'
      path: '/workbench'
      fullPath: '/projects/$projectId/workbench'
      preLoaderRoute: typeof ProtectedProjectsProjectIdWorkbenchIndexRouteImport
      parentRoute: typeof ProtectedProjectsProjectIdRouteRoute
    }
    '/_protected/projects/$projectId/ai/': {
      id: '/_protected/projects/$projectId/ai/'
      path: '/ai'
      fullPath: '/projects/$projectId/ai'
      preLoaderRoute: typeof ProtectedProjectsProjectIdAiIndexRouteImport
      parentRoute: typeof ProtectedProjectsProjectIdRouteRoute
    }
  }
}

interface ProtectedProjectsProjectIdRouteRouteChildren {
  ProtectedProjectsProjectIdIndexRoute: typeof ProtectedProjectsProjectIdIndexRoute
  ProtectedProjectsProjectIdAiIndexRoute: typeof ProtectedProjectsProjectIdAiIndexRoute
  ProtectedProjectsProjectIdWorkbenchIndexRoute: typeof ProtectedProjectsProjectIdWorkbenchIndexRoute
}

const ProtectedProjectsProjectIdRouteRouteChildren: ProtectedProjectsProjectIdRouteRouteChildren =
  {
    ProtectedProjectsProjectIdIndexRoute: ProtectedProjectsProjectIdIndexRoute,
    ProtectedProjectsProjectIdAiIndexRoute:
      ProtectedProjectsProjectIdAiIndexRoute,
    ProtectedProjectsProjectIdWorkbenchIndexRoute:
      ProtectedProjectsProjectIdWorkbenchIndexRoute,
  }

const ProtectedProjectsProjectIdRouteRouteWithChildren =
  ProtectedProjectsProjectIdRouteRoute._addFileChildren(
    ProtectedProjectsProjectIdRouteRouteChildren,
  )

interface ProtectedRouteRouteChildren {
  ProtectedProjectsProjectIdRouteRoute: typeof ProtectedProjectsProjectIdRouteRouteWithChildren
  ProtectedProjectsIndexRoute: typeof ProtectedProjectsIndexRoute
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedProjectsProjectIdRouteRoute:
    ProtectedProjectsProjectIdRouteRouteWithChildren,
  ProtectedProjectsIndexRoute: ProtectedProjectsIndexRoute,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
  AuthForgotPasswordIndexRoute: AuthForgotPasswordIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthSignupIndexRoute: AuthSignupIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
